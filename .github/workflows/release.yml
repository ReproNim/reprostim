name: Auto-release on PR merge

on:
  # ATM, this is the closest trigger to a PR merging
  push:
    branches:
      - master

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download latest auto
        run: |
          auto_download_url="$(curl -fsSL https://api.github.com/repos/intuit/auto/releases/latest | jq -r '.assets[] | select(.name == "auto-linux.gz") | .browser_download_url')"
          wget -O- "$auto_download_url" | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install build & twine
        run: python -m pip install build twine

      - name: Create release
        run: ~/auto shipit -vv
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Build docker image
        run: |
          (
            echo "$PWD"
            export REPROSTIM_CAPTURE_ENABLED=1
            REPROSTIM_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            echo "REPROSTIM_VERSION: $REPROSTIM_VERSION"
            # specify tags for the docker image to be built under repronim/reprostim:<tag>
            export REPROSTIM_DOCKER_TAGS="master latest $REPROSTIM_VERSION"
            ./build_reprostim_container.sh docker
          )
        working-directory: tools/ci

      - name: Push docker image
        run: |
          (
            REPROSTIM_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            echo "Pushing release docker image with version: $REPROSTIM_VERSION"
            docker login -u "$DOCKER_LOGIN" --password-stdin <<<"$DOCKER_TOKEN"
            docker push --all-tags repronim/reprostim
          )
        env:
          DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

# vim:set sts=2:
