#!/usr/bin/env bash

# This script runs the timesync-stimuli command in the singularity container
# It's just sample one. Script can be triggered by reprostim-videocapture
# ext proc hook, or by reprostim monitor-displays command.
#
# To use reprostim-videocapture ext proc hook, update "ext_proc_opts" section
# in the config.yaml file, and point "exec_command" to this script.
#
# To use reprostim monitor-displays command sample usage below:
#
# reprostim monitor-displays -w -1 -t 10  -n HDMI-0 -e ~/Projects/Dartmouth/branches/reprostim/tools/repronim-reprostim-timesync-stimuli
#
# It monitors display named "HDMI-0" each 10 seconds, and then run the script
# when display is connected or terminates process once disconnect event received.

OLD_CUR_DIR="$(pwd)"


echo "Run timesync-stimuli command in singularity container"

# export REPROSTIM_PATH=~/Projects/Dartmouth/branches/reprostim
#
# Set REPROSTIM_PATH to the parent directory of the bash script location
REPROSTIM_PATH="$(cd "$(dirname "$0")/.." && pwd)"
export REPROSTIM_PATH

echo "REPROSTIM_PATH: $REPROSTIM_PATH"


cd "$REPROSTIM_PATH"/containers/repronim-reprostim || exit
pwd


singularity exec \
  --cleanenv --contain \
  -B "/run/user/$(id -u)/pulse" \
  -B "${REPROSTIM_PATH}" \
  --env DISPLAY="$DISPLAY" \
  --env "PULSE_SERVER=unix:/run/user/$(id -u)/pulse/native" \
  --overlay ./repronim-reprostim-0.7.5.overlay \
  ./repronim-reprostim-0.7.5.sing \
  python3 -m reprostim timesync-stimuli --display 1 --output-prefix "$REPROSTIM_PATH"/output_

cd "$OLD_CUR_DIR" || exit
